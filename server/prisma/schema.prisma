// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id         String   @id @default(uuid())
  username   String   @unique
  email      String   @unique
  password   String
  roleId     String
  userId     String?  @unique
  permission String
  active     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  role Role  @relation(fields: [roleId], references: [id], onDelete: Restrict)
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id           String    @id @default(uuid())
  firstName    String
  lastName     String
  address      String
  phone        String
  birthday     DateTime? @default(dbgenerated("NULL"))
  photoUrl     String
  departmentId String
  officeId     String

  department Department? @relation(fields: [departmentId], references: [id], onDelete: Restrict)
  office     Office?     @relation(fields: [officeId], references: [id], onDelete: Restrict)

  account Account?
}

model Permission {
  id          String   @id @default(uuid())
  name        String   @unique
  code        String   @unique
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Role {
  id          String   @id @default(uuid())
  name        String   @unique
  code        String   @unique
  description String
  permission  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Account Account[]
}

model Department {
  id          String   @id @default(uuid())
  name        String   @unique
  description String
  officeId    String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  office Office @relation(fields: [officeId], references: [id], onDelete: Cascade)

  user User[]
}

model Office {
  id          String   @id @default(uuid())
  code        String   @unique
  taxCode     String   @unique
  name        String
  description String
  address     String
  phone       String
  fax         String
  email       String
  website     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  department Department?
  users      User[]
}
